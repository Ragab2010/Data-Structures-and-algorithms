/*
 * main.c
 *
 *  Created on: ??þ/??þ/????
 *      Author: ENG.HamaDa
 */


#include <stdio.h>
#include <stdlib.h>

#define N 10
#define NNODE 15
typedef struct node {
	int number ;
	int count ;
}Node;

int createHashTable(Node ** p , int numNode){
	*p = (Node *) malloc(sizeof(Node) *numNode);
	if(!p){
		return 0;
	}else{
		for(int i=0; i<numNode ; i++){
			p[0]->number =0;
			p[0]->count =0;
		}
		return 1;
	}
}

int insert(Node *p ,  int numNode,int *A , int numArray ){
	for(int i=0; i < numArray ; i++){
	p[A[i]%numNode].number=A[i];
	p[A[i]%numNode].count++;
	}
	return 1;
}

int checkDuplicate(Node *p ,int numNode){
	for(int i=0; i < numNode ; i++){
		if((p[i].count) >1){
			return ( p[i].number);

		}
	}
	return -1;
}

void HastableSumTwoNumber(Node *p , int numNode , int *A , int  numArray , int k){
	for(int i=0; i < numArray ; i++){
	p[A[i]%numNode].number=A[i];
	p[A[i]%numNode].count =1;
		if(p[k-A[i]].count == 1){
			printf("Element is : %d , %d \n" ,p[k-A[i]].number ,p[A[i]%numNode].number);
		}
	}
}

int main(){
	int a[N]={1,2,3,4,5,6,6,7,8,9};
	Node *p;
	createHashTable(&p , NNODE);
	//insert(p ,NNODE ,a , N );
	//printf("the number is : %d " , checkDuplicate(p , NNODE));
	HastableSumTwoNumber(p , NNODE , a , N , 14);



	return 0;
}

